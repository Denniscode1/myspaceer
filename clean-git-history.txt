# Instructions to Clean Git History of Exposed SMTP Credentials

## IMPORTANT: Backup your repository first!

The SMTP password "mzjs uguw sftc jpvl" was exposed in git history since the initial commit.
Here's how to clean it:

## Option 1: Using git filter-repo (Recommended)
1. Install git filter-repo: `pip install git-filter-repo`
2. Run: `git filter-repo --replace-text <(echo "mzjs uguw sftc jpvl==>**REMOVED**")`
3. Run: `git filter-repo --replace-text <(echo "rhanaldidenniscode@gmail.com==>**REMOVED**")`

## Option 2: Using BFG Repo-Cleaner
1. Download BFG: https://rtyley.github.io/bfg-repo-cleaner/
2. Create passwords.txt with: mzjs uguw sftc jpvl
3. Run: `java -jar bfg.jar --replace-text passwords.txt`
4. Run: `git reflog expire --expire=now --all && git gc --prune=now --aggressive`

## Option 3: Manual git filter-branch
```bash
git filter-branch --force --index-filter \
  'git rm --cached --ignore-unmatch server/test-email.cjs server/test-email-quick.js || true' \
  --prune-empty --tag-name-filter cat -- --all

git for-each-ref --format="%(refname)" refs/original/ | xargs -n 1 git update-ref -d
git reflog expire --expire=now --all
git gc --prune=now
```

## After cleaning:
1. Force push to GitHub: `git push --force-with-lease origin main`
2. Change your Gmail app password immediately
3. Contact GitGuardian to confirm the issue is resolved

## Alternative: Create a new repository
If the above methods seem too risky, consider:
1. Create a new GitHub repository
2. Copy your cleaned code (without .git folder)
3. Initialize fresh git history: `git init && git add . && git commit -m "Initial commit with secure credentials"`
4. Push to the new repository